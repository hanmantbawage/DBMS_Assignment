Assignment –7
Summarizing Data with Aggregate Functions.

1) Write a query that counts all orders for October 3.
==>select count(*)  from orders where odate='1990-10-03' ;

2) Write a query that counts the number of different non-NULL city values in the
Customers table.
==>select count(city) from customers where city is not null;

3) Write a query that selects each customer’s smallest order.
==>Select cnum, min(amt)from orders group by cnum;

4) Write a query that selects the first customer, in alphabetical order, whose name
begins with G.
==>select min(cname) from customers where cname like 'g%';

5) Write a query that selects the highest rating in each city.
==>select city ,max(rating)from customers group by city;

6) Write a query that counts the number of salespeople registering orders for each
day. (If a salesperson has more than one order on a given day, he or she should be
counted only once.).
==>select count(snum),odate  from orders group by odate;


Assignment –8

Formatting Query output.

1) Assume each salesperson has a 12% commission. Write a query on the orders table that will produce the order number, the salesperson number, and the amount of the salesperson’s commission for that order.
==>select onum,snum, sum(0.12*amt) as com from orders group by snum;

2) Write a query on the Customers table that will find the highest rating in each city. Put the output in this form:
==>select city, max(rating) from customers group by city;

3) Write a query that lists customers in descending order of rating. Output the rating field first, followed by the customer’s name and number.
==>select rating,cname,cnum from customers order by rating desc;

4) Write a query that totals the orders for each day and places the results in descending order.
==>select * from orders group by odate order by odate;


